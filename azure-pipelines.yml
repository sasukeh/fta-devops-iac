# Deploy to Azure Kubernetes Service
# Build and push image to Azure Container Registry; Deploy to Azure Kubernetes Service
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

trigger:
- none

resources:
- repo: self

variables:

  # Container registry service connection established during pipeline creation
  dockerRegistryServiceConnection: '708ea539-d5df-4542-8b16-d21ffe79f013'
  dockerfilePath: '**/Dockerfile'
  tag: '$(Build.BuildId)'
  resourceGroup: 'ftadevops-rg'
  clusterName: 'aksdevops'
  deployInfra: false
  isNewCluster: true

  # Agent VM image name
  vmImageName: 'ubuntu-latest'

pool:
  vmImage: $(vmImageName)

stages:
- stage: Build
  displayName: Build
  jobs:  
  - job: Build
    displayName: Build
    steps:
    - task: Docker@2
      displayName: Build and push an image to container registry
      inputs:
        command: buildAndPush
        repository: $(imageRepository)
        dockerfile: $(dockerfilePath)
        containerRegistry: $(dockerRegistryServiceConnection)
        tags: |
          $(tag)
          latest

    - task: PublishPipelineArtifact@1
      inputs:
        path: $(System.DefaultWorkingDirectory)
        artifact: artifacts

    - task: AzureResourceManagerTemplateDeployment@3
      condition: eq(variables.deployInfra,true)
      inputs:
        deploymentScope: 'Resource Group'
        azureResourceManagerConnection: 'Victor-DevOps'
        subscriptionId: '$(subscriptionId)'
        action: 'Create Or Update Resource Group'
        resourceGroupName: $(resourceGroup)
        location: 'Southeast Asia'
        templateLocation: 'Linked artifact'
        csmFile: '$(System.DefaultWorkingDirectory)/arm/template.json'
        csmParametersFile: '$(System.DefaultWorkingDirectory)/arm/parameters.json'
        overrideParameters: '-clusterName $(clusterName) -doRoleAssignment $(isNewCluster)'
        deploymentMode: 'Incremental'

    - task: KubectlInstaller@0
      inputs:
        kubectlVersion: 'latest'

    - task: HelmInstaller@1
      inputs:
        helmVersionToInstall: 'latest'

    - task: AzureCLI@2
      condition: eq(variables.isNewCluster,true)
      inputs:
        azureSubscription: 'Victor-DevOps'
        scriptType: 'bash'
        scriptLocation: 'scriptPath'
        scriptPath: '$(System.DefaultWorkingDirectory)/scripts/cluster_config.sh'

- stage: test
  displayName: Deploy to test
  dependsOn: Build
  jobs:
  - deployment: Deploy
    displayName: Deploy stage
    environment: 'test'
    strategy:
      runOnce:
        deploy:
          steps:
          - task: HelmDeploy@0
            inputs:
              connectionType: 'Azure Resource Manager'
              azureSubscription: 'Victor-DevOps'
              azureResourceGroup: '$(resourceGroup)'
              kubernetesCluster: '$(clusterName)'
              namespace: '$(Environment.Name)'
              command: 'install'
              chartType: 'FilePath'
              chartPath: '$(Pipeline.Workspace)/artifacts/charts/web'
              releaseName: '$(Environment.Name)'
          

- stage: uat
  displayName: Deploy to uat
  dependsOn: test
  jobs:
  - deployment: Deploy
    displayName: Deploy stage
    environment: 'uat'
    strategy:
      runOnce:
        deploy:
          steps:
          - task: HelmDeploy@0
            inputs:
              connectionType: 'Azure Resource Manager'
              azureSubscription: 'Victor-DevOps'
              azureResourceGroup: '$(resourceGroup)'
              kubernetesCluster: '$(clusterName)'
              namespace: '$(Environment.Name)'
              command: 'install'
              chartType: 'FilePath'
              chartPath: '$(Pipeline.Workspace)/artifacts/charts/web'
              releaseName: '$(Environment.Name)'

- stage: prod
  displayName: Deploy to prod
  dependsOn: uat
  jobs:
  - deployment: Deploy
    displayName: Deploy stage
    environment: 'prod'
    strategy:
      runOnce:
        deploy:
          steps:
          - task: HelmDeploy@0
            inputs:
              connectionType: 'Azure Resource Manager'
              azureSubscription: 'Victor-DevOps'
              azureResourceGroup: '$(resourceGroup)'
              kubernetesCluster: '$(clusterName)'
              namespace: '$(Environment.Name)'
              command: 'install'
              chartType: 'FilePath'
              chartPath: '$(Pipeline.Workspace)/artifacts/charts/web'
              releaseName: '$(Environment.Name)'
