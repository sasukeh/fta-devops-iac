{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "clusterName": {
            "type": "string",
            "metadata": {
                "description": "The name of the Managed Cluster resource."
            }
        },
        "location": {
            "type": "string",
            "defaultValue": "[resourceGroup().location]",
            "metadata": {
                "description": "The location of AKS resource."
            }
        },
        "dnsPrefix": {
            "type": "string",
            "metadata": {
                "description": "Optional DNS prefix to use with hosted Kubernetes API server FQDN."
            }
        },
        "osDiskSizeGB": {
            "type": "int",
            "defaultValue": 0,
            "metadata": {
                "description": "Disk size (in GiB) to provision for each of the agent pool nodes. This value ranges from 0 to 1023. Specifying 0 will apply the default disk size for that agentVMSize."
            },
            "minValue": 0,
            "maxValue": 1023
        },
        "kubernetesVersion": {
            "type": "string",
            "defaultValue": "1.7.7",
            "metadata": {
                "description": "The version of Kubernetes."
            }
        },
        "nodeSize": {
            "type": "string",
            "defaultValue": "Standard_DS2_v2",
            "metadata": {
                "description": "VM size of node"
            }
        },
        "nodeNumber": {
            "type": "int",
            "defaultValue": 2,
            "metadata": {
                "description": "Number of node"
            },
            "minValue": 1,
            "maxValue": 100
        },
        "networkPlugin": {
            "type": "string",
            "allowedValues": [
                "azure",
                "kubenet"
            ],
            "metadata": {
                "description": "Network plugin used for building Kubernetes network."
            }
        },
        "maxPods": {
            "type": "int",
            "defaultValue": 30,
            "metadata": {
                "description": "Maximum number of pods that can run on a node."
            }
        },
        "enableRBAC": {
            "type": "bool",
            "defaultValue": true,
            "metadata": {
                "description": "Boolean flag to turn on and off of RBAC."
            }
        },
        "vmssNodePool": {
            "type": "bool",
            "defaultValue": false,
            "metadata": {
                "description": "Boolean flag to turn on and off of VM scale sets"
            }
        },
        "windowsProfile": {
            "type": "bool",
            "defaultValue": false,
            "metadata": {
                "description": "Boolean flag to turn on and off of VM scale sets"
            }
        },
        "enablePrivateCluster": {
            "type": "bool",
            "defaultValue": false,
            "metadata": {
                "description": "Enable private network access to the Kubernetes cluster."
            }
        },
        "enableHttpApplicationRouting": {
            "type": "bool",
            "defaultValue": true,
            "metadata": {
                "description": "Boolean flag to turn on and off of http application routing."
            }
        },
        "enableOmsAgent": {
            "type": "bool",
            "defaultValue": true,
            "metadata": {
                "description": "Boolean flag to turn on and off of omsagent addon."
            }
        },
        "workspaceName": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "Specify the name for your OMS workspace."
            }
        },
        "workspaceRegion": {
            "type": "string",
            "defaultValue": "[resourceGroup().location]",
            "metadata": {
                "description": "Specify the region for your OMS workspace."
            }
        },
        "omsResourceGroup": {
            "type": "string",
            "defaultValue": "[resourceGroup().name]",
            "metadata": {
                "description": "Specify the name for your OMS workspace."
            }
        },
        "omsSku": {
            "type": "string",
            "defaultValue": "PerGB2018",
            "allowedValues": [
                "Free",
                "Standard",
                "Premium",
                "Standalone",
                "PerNode",
                "PerGB2018",
                "CapacityReservation"
            ],
            "metadata": {
                "description": "Select the SKU for your workspace."
            }
        },
        "acrName": {
            "type": "string",
            "metadata": {
                "description": "Specify the name of the Azure Container Registry."
            }
        },
        "acrResourceGroup": {
            "type": "string",
            "metadata": {
                "description": "The name of the resource group the container registry is associated with."
            }
        },
        "networkPolicy": {
            "type": "string",
            "metadata": {
                "description": "Network policy used for building Kubernetes network."
            }
        },
        "vnetName": {
            "type": "string",
            "metadata": {
                "description": "Name of Virtual network."
            }
        },
        "serviceCidr": {
            "type": "string",
            "metadata": {
                "description": "A CIDR notation IP range from which to assign service cluster IPs."
            }
        },
        "dnsServiceIP": {
            "type": "string",
            "metadata": {
                "description": "Containers DNS server IP address."
            }
        },
        "dockerBridgeCidr": {
            "type": "string",
            "metadata": {
                "description": "A CIDR notation IP for Docker bridge."
            }
        },
        "aciConnectorLinuxEnabled": {
            "type": "bool",
            "metadata": {
                "description": "Enables the Linux ACI Connector."
            }
        },
        "acrRAguid": {
            "type": "string",
            "defaultValue": "[newGuid()]",
            "metadata": {
                "description": "GUID for Role Assignment - DO NOT USE"
            }
        },
        "omsRAguid": {
            "type": "string",
            "defaultValue": "[newGuid()]",
            "metadata": {
                "description": "GUID for Role Assignment - DO NOT USE"
            }
        },
        "defualtSubnetRAguid": {
            "type": "string",
            "defaultValue": "[newGuid()]",
            "metadata": {
                "description": "GUID for Role Assignment - DO NOT USE"
            }
        },
        "aciSubnetRAguid": {
            "type": "string",
            "defaultValue": "[newGuid()]",
            "metadata": {
                "description": "GUID for Role Assignment - DO NOT USE"
            }
        },
        "doRoleAssignment": {
            "type": "bool",
            "defaultValue": false,
            "metadata": {
                "description": "If create cluster for the first time set this to TRUE"
            }
        }
    },
    "variables": {
        "workspaceName": "[if(empty(parameters('workspaceName')),concat(parameters('clusterName'),'Workspace',guid(resourceGroup().id)),parameters('workspaceName'))]",
        "omsWorkspaceId": "[resourceId(parameters('omsResourceGroup'),'microsoft.operationalinsights/workspaces',variables('workspaceName'))]"
    },
    "resources": [
        {
            "apiVersion": "2020-03-01",
            "dependsOn": [
                "[concat('Microsoft.Network/virtualNetworks/',parameters('vnetName'))]"
            ],
            "type": "Microsoft.ContainerService/managedClusters",
            "location": "[parameters('location')]",
            "name": "[parameters('clusterName')]",
            "properties": {
                "kubernetesVersion": "[parameters('kubernetesVersion')]",
                "enableRBAC": "[parameters('enableRBAC')]",
                "dnsPrefix": "[parameters('dnsPrefix')]",
                "agentPoolProfiles": [
                    {
                        "name": "agentpool",
                        "osDiskSizeGB": "[parameters('osDiskSizeGB')]",
                        "count": "[parameters('nodeNumber')]",
                        "vmSize": "[parameters('nodeSize')]",
                        "osType": "Linux",
                        "storageProfile": "ManagedDisks",
                        "type": "[if(parameters('vmssNodePool'),'VirtualMachineScaleSets','AvailabilitySet')]",
                        "mode": "System",
                        "vnetSubnetID": "[concat(resourceId(resourceGroup().name,'Microsoft.Network/virtualNetworks',parameters('vnetName')),'/subnets/default')]"
                    }
                ],
                "networkProfile": {
                    "loadBalancerSku": "standard",
                    "networkPlugin": "[parameters('networkPlugin')]",
                    "networkPolicy": "[parameters('networkPolicy')]",
                    "serviceCidr": "[parameters('serviceCidr')]",
                    "dnsServiceIP": "[parameters('dnsServiceIP')]",
                    "dockerBridgeCidr": "[parameters('dockerBridgeCidr')]"
                },
                "apiServerAccessProfile": {
                    "enablePrivateCluster": "[parameters('enablePrivateCluster')]"
                },
                "addonProfiles": {
                    "httpApplicationRouting": {
                        "enabled": "[parameters('enableHttpApplicationRouting')]"
                    },
                    "omsagent": {
                        "enabled": "[parameters('enableOmsAgent')]",
                        "config": {
                            "logAnalyticsWorkspaceResourceID": "[variables('omsWorkspaceId')]"
                        }
                    },
                    "aciConnectorLinux": {
                        "enabled": "[parameters('aciConnectorLinuxEnabled')]",
                        "config": {
                            "SubnetName": "virtual-node-aci"
                        }
                    }
                }
            },
            "tags": {},
            "identity": {
                "type": "SystemAssigned"
            }
        },
        {
            "condition": "[not(equals(variables('workspaceName'),parameters('workspaceName')))]",
            "apiVersion": "2015-11-01-preview",
            "name": "[variables('workspaceName')]",
            "location": "[parameters('location')]",
            "type": "Microsoft.OperationalInsights/workspaces",
            "properties": {
                "sku": {
                    "name": "[parameters('omsSku')]"
                }
            }
        },
        {
            "type": "Microsoft.Resources/deployments",
            "name": "OMSolutionDeployment",
            "apiVersion": "2017-05-10",
            "resourceGroup": "[split(variables('omsWorkspaceId'),'/')[4]]",
            "subscriptionId": "[split(variables('omsWorkspaceId'),'/')[2]]",
            "properties": {
                "mode": "Incremental",
                "template": {
                    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {},
                    "variables": {},
                    "resources": [
                        {
                            "apiVersion": "2015-11-01-preview",
                            "type": "Microsoft.OperationsManagement/solutions",
                            "location": "[parameters('workspaceRegion')]",
                            "name": "[concat('ContainerInsights', '(', split(variables('omsWorkspaceId'),'/')[8], ')')]",
                            "properties": {
                                "workspaceResourceId": "[variables('omsWorkspaceId')]"
                            },
                            "plan": {
                                "name": "[concat('ContainerInsights', '(', split(variables('omsWorkspaceId'),'/')[8], ')')]",
                                "product": "[concat('OMSGallery/', 'ContainerInsights')]",
                                "promotionCode": "",
                                "publisher": "Microsoft"
                            }
                        }
                    ]
                }
            },
            "dependsOn": [
                "[resourceId(parameters('omsResourceGroup'),'microsoft.operationalinsights/workspaces',variables('workspaceName'))]"
            ]
        },
        {
            "condition": "[parameters('doRoleAssignment')]",
            "name": "ConnectAKStoACR",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2017-05-10",
            "resourceGroup": "[parameters('acrResourceGroup')]",
            "dependsOn": [
                "[concat('Microsoft.ContainerService/managedClusters/', parameters('clusterName'))]"
            ],
            "properties": {
                "mode": "Incremental",
                "template": {
                    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                    "contentVersion": "1.0.0.0",
                    "resources": [
                        {
                            "apiVersion": "2018-09-01-preview",
                            "type": "Microsoft.ContainerRegistry/registries/providers/roleAssignments",
                            "name": "[concat(parameters('acrName'), '/Microsoft.Authorization/',parameters('acrRAguid'))]",
                            "properties": {
                                "mode": "Incremental",
                                "principalId": "[reference(parameters('clusterName'), '2020-03-01').identityProfile.kubeletidentity.objectId]",
                                "principalType": "ServicePrincipal",
                                "roleDefinitionId": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Authorization/roleDefinitions/', 'b24988ac-6180-42a0-ab88-20f7382dd24c')]",
                                "scope": "[resourceId(parameters('acrResourceGroup'), 'Microsoft.ContainerRegistry/registries', parameters('acrName'))]"
                            }
                        }
                    ]
                }
            }
        },
        {
            "condition": "[parameters('doRoleAssignment')]",
            "type": "Microsoft.Resources/deployments",
            "name": "ClusterMonitoringRoleAssigment",
            "apiVersion": "2017-05-10",
            "resourceGroup": "[resourceGroup().name]",
            "properties": {
                "mode": "Incremental",
                "template": {
                    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {},
                    "variables": {},
                    "resources": [
                        {
                            "type": "Microsoft.ContainerService/managedClusters/providers/roleAssignments",
                            "apiVersion": "2018-01-01-preview",
                            "name": "[concat(parameters('clusterName'), '/Microsoft.Authorization/',parameters('omsRAguid'))]",
                            "properties": {
                                "mode": "Incremental",
                                "roleDefinitionId": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Authorization/roleDefinitions/', '3913510d-42f4-4e42-8a64-420c390055eb')]",
                                "principalId": "[reference(parameters('clusterName')).addonProfiles.omsagent.identity.objectId]",
                                "scope": "[resourceId(resourceGroup().name, 'Microsoft.ContainerService/managedClusters', parameters('clusterName'))]"
                            }
                        }
                    ]
                }
            },
            "dependsOn": [
                "[concat('Microsoft.ContainerService/managedClusters/', parameters('clusterName'))]"
            ]
        },
        {
            "apiVersion": "2019-09-01",
            "name": "[parameters('vnetName')]",
            "type": "Microsoft.Network/virtualNetworks",
            "location": "[parameters('location')]",
            "properties": {
                "subnets": [
                    {
                        "name": "default",
                        "properties": {
                            "addressPrefix": "10.240.0.0/16"
                        }
                    },
                    {
                        "name": "virtual-node-aci",
                        "properties": {
                            "addressPrefix": "10.241.0.0/16",
                            "delegations": [
                                {
                                    "name": "aciDelegation",
                                    "properties": {
                                        "serviceName": "Microsoft.ContainerInstance/containerGroups",
                                        "actions": [
                                            "Microsoft.Network/virtualNetworks/subnets/action"
                                        ]
                                    }
                                }
                            ]
                        }
                    }
                ],
                "addressSpace": {
                    "addressPrefixes": [
                        "10.0.0.0/8"
                    ]
                }
            },
            "tags": {}
        },
        {
            "condition": "[parameters('doRoleAssignment')]",
            "type": "Microsoft.Resources/deployments",
            "name": "ClusterSubnetRoleAssignmentDeployment",
            "apiVersion": "2017-05-10",
            "resourceGroup": "[resourceGroup().name]",
            "properties": {
                "mode": "Incremental",
                "template": {
                    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {},
                    "variables": {},
                    "resources": [
                        {
                            "type": "Microsoft.Network/virtualNetworks/subnets/providers/roleAssignments",
                            "apiVersion": "2017-05-01",
                            "name": "[concat(parameters('vnetName'),'/default/Microsoft.Authorization/',parameters('defualtSubnetRAguid'))]",
                            "properties": {
                                "mode": "Incremental",
                                "roleDefinitionId": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Authorization/roleDefinitions/', '4d97b98b-1d4f-4787-a291-c67834d212e7')]",
                                "principalId": "[reference(parameters('clusterName')).identityProfile.kubeletidentity.objectId]",
                                "scope": "[concat('/subscriptions/',subscription().subscriptionId,'/resourceGroups/',resourceGroup().name,'/providers/Microsoft.Network/virtualNetworks/',parameters('vnetName'),'/subnets/default')]"
                            }
                        }
                    ]
                }
            },
            "dependsOn": [
                "[concat('Microsoft.Network/virtualNetworks/',parameters('vnetName'))]"
            ]
        },
        {
            "condition": "[parameters('doRoleAssignment')]",
            "type": "Microsoft.Resources/deployments",
            "name": "AciSubnetRoleAssignmentDeployment",
            "apiVersion": "2017-05-10",
            "resourceGroup": "[resourceGroup().name]",
            "properties": {
                "mode": "Incremental",
                "template": {
                    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {},
                    "variables": {},
                    "resources": [
                        {
                            "type": "Microsoft.Network/virtualNetworks/subnets/providers/roleAssignments",
                            "apiVersion": "2017-05-01",
                            "name": "[concat(parameters('vnetName'),'/virtual-node-aci/Microsoft.Authorization/',parameters('aciSubnetRAguid'))]",
                            "properties": {
                                "mode": "Incremental",
                                "roleDefinitionId": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Authorization/roleDefinitions/', '4d97b98b-1d4f-4787-a291-c67834d212e7')]",
                                "principalId": "[reference(parameters('clusterName')).addonProfiles.aciConnectorLinux.identity.objectId]",
                                "scope": "[concat('/subscriptions/',subscription().subscriptionId,'/resourceGroups/',resourceGroup().name,'/providers/Microsoft.Network/virtualNetworks/',parameters('vnetName'),'/subnets/virtual-node-aci')]"
                            }
                        }
                    ]
                }
            },
            "dependsOn": [
                "[concat('Microsoft.Network/virtualNetworks/',parameters('vnetName'))]"
            ]
        }
    ],
    "outputs": {
        "controlPlaneFQDN": {
            "type": "string",
            "value": "[reference(concat('Microsoft.ContainerService/managedClusters/', parameters('clusterName'))).fqdn]"
        }
    }
}